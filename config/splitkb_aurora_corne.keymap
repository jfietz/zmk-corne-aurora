/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE_L 0
#define SYM_L 1
#define NAV_L 2
#define CTRL_NUM_L 3
#define KBD_L 4



    

/ {
	chosen {
        zmk,matrix_transform = &five_column_transform;
    };
	
	/*left_encoder: left_encoder {
		status = "ok";
	};
	right_encoder: right_encoder {
		status = "ok";
	};*/
	
    behaviors {
        dotcolon: dot_colon {
                      compatible = "zmk,behavior-mod-morph";
                      label = "DOT_COLON";
                      #binding-cells = <0>;
                      bindings = <&kp DOT>, <&kp COLON>;
                      mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
        };

        td: tapdance {
                compatible = "zmk,behavior-hold-tap";
                label = "TAPDANCE";
                #binding-cells = <2>;
                tapping-term-ms = <150>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
        };

        tdsh: shiftlock_tapdance { 
                compatible = "zmk,behavior-tap-dance";
                label = "SHIFTLOCK_TAPDANCE";
                #binding-cells = <0>;
                tapping-term-ms = <130>;
                bindings = <&sk LSHIFT>, <&caps_word>;
        };

		sm: sticky_mod {
			compatible = "zmk,behavior-sticky-key";
			label = "STICK_MOD";
			#binding-cells = <1>;
			release-after-ms = <60000>;
			bindings = <&kp>;
			ignore-modifiers;
		};

        sl_nav: sl_nav {
            label = "SL_NAV";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_tap &kp K_CANCEL>
                , <&macro_press &sl NAV_L>
                , <&macro_pause_for_release>
                , <&macro_release &sl NAV_L>
                ;
        };
    };

	conditional_layers {
		compatible = "zmk,conditional-layers";
		
		// NAV_L and SYM_L needs to be lower than CTRL_NUM_L
		// "Since higher-numbered layers are processed first, a then-layer should 
		// generally have a higher number than its associated if-layers so the
		// then-layer can be accessed when active."
		tri_layer {
			if-layers = <NAV_L SYM_L>;
			then-layer = <CTRL_NUM_L>;
		};
	};

	combos {
		compatible = "zmk,combos";

		/*		KEY POSITIONS SWEEP
		0	1	2	3	4		5	6	7	8	9
		10	11	12	13	14		15	16	17	18	19
		20	21	22	23	24		25	26	27	28	29
					30  31		32	33
		*/	
		/*		KEY POSITIONS CORNE (6x3)
		0	1	2	3	4	5		6	7	8	9 	10	11
		12	13	14	15	16	17		18	19  20 	21	22	23	
		24 	25	26	27	28	29		30	31	32	33	34	35
					30  31	32		33 	34	35
		*/

	};
	

	keymap {
			compatible = "zmk,keymap";

			default_layer {

					bindings = <
&kp Q &kp W &kp F &kp P &kp B /*|*/ &kp J &kp L &kp U 				  &td MINUS COMMA &kp LC(BSPC) 
&kp A &kp R &kp S &kp T &kp G /*|*/ &kp M &kp N &kp E 				  &kp I           &kp O    
&kp Z &kp Y &kp C &kp D &kp V /*|*/ &kp K &kp H &td UNDERSCORE SLASH  &td EXCL DOT    &kp X
		&trans &sl NAV_L     &kp SPC /*|*/ &tdsh &sl SYM_L &trans
					>;
					
					sensor-bindings = <&inc_dec_kp Q P &inc_dec_kp A S>;
					label = " def";
			};

			symbol_layer {
					bindings = <
&kp ESC   &trans         &kp HASH &kp DLLR &kp PRCNT /*|*/ &kp SEMI      &kp LBKT &kp RBKT &kp BSLH     &kp BKSP 
&kp TAB   &kp EQUAL      &kp SQT  &kp DQT  &kp AT    /*|*/ &hm HOME STAR &kp LPAR &kp RPAR &hm END PIPE &kp ENTER 
&kp TILDE &kp LC(LA(N2)) &kp LT   &kp GT   &kp MINUS /*|*/ &kp AMPS      &kp LBRC &kp RBRC &kp CARET    &kp RALT 
								   &trans &trans &trans 	/*|*/ &trans &trans &trans
					>;
					label = " sym";
			};

			nav_layer {
					 bindings = <
&trans &trans &trans &trans &trans /*|*/ &kp LG(LBKT) &kp LC(LS(TAB))  &kp RC(TAB) &kp LG(RBKT) &trans 
&sm LGUI  &sm LALT  &sm LSHFT &sm LCTRL &kp DEL    /*|*/ &kp LEFT     &kp DOWN &kp UP &kp RIGHT &kp ENTER 
&kp LC(Z) &kp LC(Y) &trans    &kp LC(C)  &kp LC(V) /*|*/ &trans    &kp PG_DN &kp PG_UP &trans &kp LC(X)
								     &trans &trans &trans /*|*/ &trans &trans  &trans
				    >;
					label = " nav";
	        };
					


			control_num_layer {
					bindings = <
&kp ESC   &kp C_PP &kp C_PREV   &kp C_NEXT   &kp AMPS  /*|*/ &kp EQUAL &kp N7 &kp N8 &kp N9 &kp PLUS 
&kp TAB   &trans   &kp C_VOL_DN &kp C_VOL_UP &kp COMMA /*|*/ &kp STAR  &kp N4 &kp N5 &kp N6 &kp MINUS
&to KBD_L &trans   &trans 		&trans 		 &kp DOT   /*|*/ &kp N0    &kp N1 &kp N2 &kp N3 &kp SLASH
												 &trans &trans  &trans /*|*/ &trans &trans &trans
					>;
					label = " ctl num";

			};


			 kbd_layer {
// -----------------------------------------------------------------------------------------
// | | RGB_TOG | RGB_EFF |         |         |  |      |  | BT_0 | BT_1 | BT_2 | BT_3 | BT_4  | |
// | | RGB_BRI | RGB_SPI | RGB_HUI | RGB_SAI |  |      |  |      |      |      |      |       | | 
// | | RGB_BRD | RGB_SPD | RGB_HUD | RGB_SAD |  |      |  |      |      |BT_CLR|      |       | |
//                       |         | to 0    |  |      |  |      |      |
                        bindings = <
&trans &rgb_ug RGB_TOG &rgb_ug RGB_EFF &trans 		   &trans 		   &trans /*|*/ &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
&trans &rgb_ug RGB_BRI &rgb_ug RGB_SPI &rgb_ug RGB_HUI &rgb_ug RGB_SAI &trans /*|*/ &trans &trans 		&trans 	     &trans       &trans 	    &trans   
&trans &rgb_ug RGB_BRD &rgb_ug RGB_SPD &rgb_ug RGB_HUD &rgb_ug RGB_SAD &trans /*|*/ &trans &trans 		&bt BT_CLR   &trans       &trans 	    &trans   
                          	    			       &trans &to 0 &trans /*|*/ &trans &to 1 &trans
                        >;
						label = " kbd";
                };
        };
};

/*
/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                          	        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
*/